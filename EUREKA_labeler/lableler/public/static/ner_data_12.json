[{"text":"Use Window.getWindows() to get reference to all windows, and check if they are visible with Window.isShowing()","label":{"api":{"Window.getWindows()":[[4,22]],"Window.isShowing()":[[92,109]]}}},{"text":"Worth to note that windows that have been hidden but not disposed will still prevent Java from exiting","label":{"api":{}}},{"text":"Just change the code to use Double instead of double","label":{"api":{"Double":[[28,33]]}}},{"text":"You could use the Scanner class in Java to read lines of the text files, and the PrintWriter class to create the updated.txt file","label":{"api":{"Scanner":[[18,24]],"PrintWriter":[[81,91]]}}},{"text":"Have you tried using @XmlValue instead of @XmlElement for the time field","label":{"api":{"@XmlValue":[[21,29]],"@XmlElement":[[42,52]]}}},{"text":"Use the Temporal annotation","label":{"api":{"Temporal":[[8,15]]}}},{"text":"Rather than getRequestParameterMap() (which is read-only) you should invoke getRequestMap() on the ExternalContext","label":{"api":{"getRequestParameterMap()":[[12,35]],"getRequestMap()":[[76,90]],"ExternalContext":[[99,113]]}}},{"text":"You can use the static methods of class Thread to do something with the current thread","label":{"api":{"Thread":[[40,45]]}}},{"text":"The standard API already has a binary search that allows doing this fine","label":{"api":{"binary search":[[31,43]]}}},{"text":"You can use the ArrayList.toArray(T[]) method, like so","label":{"api":{"ArrayList.toArray(T[])":[[16,37]]}}}]