[{"text": "In Java 9 and afterward, if there's a declared zero-parameter (\"nullary\") constructor, you'd use Class.getDeclaredConstructor() to get it, then call newInstance() on it", "label": {"api": {"Class.getDeclaredConstructor()": [[97, 126]], "newInstance()": [[149, 161]]}}}, {"text": "Prior to Java 9, you would have used Class.newInstance", "label": {"api": {"Class.newInstance": [[37, 53]]}}}, {"text": "A more robust route is to go through Class.getDeclaredConstructors or Class.getConstructors, which takes you into using the Reflection stuff in the java.lang.reflect package, to find a constructor with the parameter types matching the arguments you intend to give it", "label": {"api": {"Class.getDeclaredConstructors": [[37, 65]], "Class.getConstructors": [[70, 90]], "java.lang.reflect": [[148, 164]]}}}]